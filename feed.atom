<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://GITHUB_USERNAME.github.io/REPO_NAME/index.html</id>
    <title>osmos::feed</title>
    <updated>2021-05-22T00:48:03.291Z</updated>
    <generator>osmosfeed 1.7.2</generator>
    <link rel="alternate" href="https://GITHUB_USERNAME.github.io/REPO_NAME/index.html"/>
    <link rel="self" href="https://GITHUB_USERNAME.github.io/REPO_NAME/feed.atom"/>
    <entry>
        <title type="html"><![CDATA[Distribution and Demand]]></title>
        <id>https://stratechery.com/?p=5889</id>
        <link href="https://stratechery.com/2021/distribution-and-demand/"/>
        <updated>2021-05-18T12:57:29.000Z</updated>
        <summary type="html"><![CDATA[Distribution on the Internet is free; what matters is controlling demand. AT&T and Verizon didn't understand the distinction.]]></summary>
        <author>
            <name>Ben Thompson</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[v1.7.2]]></title>
        <id>https://github.com/osmoscraft/osmosfeed/releases/tag/v1.7.2</id>
        <link href="https://github.com/osmoscraft/osmosfeed/releases/tag/v1.7.2"/>
        <updated>2021-05-17T05:32:19.000Z</updated>
        <summary type="html"><![CDATA[⚠ Deprecated: To accommodate the monorepo setup, the node version in all templates/demos/examples has changed from 14 to 16. This is not a breaking change as our compile target is still node 14, and node 16 is backward compatible. We still recommend you start using node-version: "16" in your .github/workflows/update-feed.yaml today to get the performance/security improvements from the newer node. See example
Chore: Reorganize to monorepo with npm workspace.]]></summary>
        <author>
            <name>Release notes from osmosfeed</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[v1.7.1]]></title>
        <id>https://github.com/osmoscraft/osmosfeed/releases/tag/v1.7.1</id>
        <link href="https://github.com/osmoscraft/osmosfeed/releases/tag/v1.7.1"/>
        <updated>2021-05-16T02:33:58.000Z</updated>
        <summary type="html"><![CDATA[Fixed: static files were unnecessarily copied for custom templates.]]></summary>
        <author>
            <name>Release notes from osmosfeed</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[v1.7.0]]></title>
        <id>https://github.com/osmoscraft/osmosfeed/releases/tag/v1.7.0</id>
        <link href="https://github.com/osmoscraft/osmosfeed/releases/tag/v1.7.0"/>
        <updated>2021-05-16T01:42:24.000Z</updated>
        <summary type="html"><![CDATA[Added: templating system. Demo | Source | Docs
Chore: rendering logic refactoring. Adopting functional paradigm.
Thank you @tianheg, @onnyyonn]]></summary>
        <author>
            <name>Release notes from osmosfeed</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Cloudflare on the Edge]]></title>
        <id>https://stratechery.com/?p=5876</id>
        <link href="https://stratechery.com/2021/cloudflare-on-the-edge/"/>
        <updated>2021-05-11T17:01:56.000Z</updated>
        <summary type="html"><![CDATA[Cloudflare is uniquely positioned to become a major player in an Internet 3.0 world, where politics matter more than economics.]]></summary>
        <author>
            <name>Ben Thompson</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[v1.4.0]]></title>
        <id>https://github.com/osmoscraft/osmosfeed/releases/tag/v1.4.0</id>
        <link href="https://github.com/osmoscraft/osmosfeed/releases/tag/v1.4.0"/>
        <updated>2021-05-10T08:55:42.000Z</updated>
        <summary type="html"><![CDATA[Added: Basic theme customization: Demo | Source | Docs.]]></summary>
        <author>
            <name>Release notes from osmosfeed</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[v1.6.0]]></title>
        <id>https://github.com/osmoscraft/osmosfeed/releases/tag/v1.6.0</id>
        <link href="https://github.com/osmoscraft/osmosfeed/releases/tag/v1.6.0"/>
        <updated>2021-05-10T08:15:20.000Z</updated>
        <summary type="html"><![CDATA[Added: Link from the title of a subscription to its website.
Added: Store feedUrl and siteUrl for each source in cache.
Added: Semantic element (<time>) for timestamp on the UI.
Added: Semantic API for theming the default template. Demo | Source | Docs
Changed: Moved feed metadata from article level to feed level in cache.
Fixed: Any html-like text was stripped from title. Fixed with encoded text.
Removed: href for each source in cache. The value was never used so it's not a breaking change.]]></summary>
        <author>
            <name>Release notes from osmosfeed</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[v1.5.0]]></title>
        <id>https://github.com/osmoscraft/osmosfeed/releases/tag/v1.5.0</id>
        <link href="https://github.com/osmoscraft/osmosfeed/releases/tag/v1.5.0"/>
        <updated>2021-05-08T05:16:47.000Z</updated>
        <summary type="html"><![CDATA[Added: Atom feed generator
Added: Customizable site title
Added: Copy all files from static directory to the root of the site.
Changed: Favicon, css, and js assets now existing at site root level.
Chore: Excluded testing files from repo.]]></summary>
        <author>
            <name>Release notes from osmosfeed</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Market-Making on the Internet]]></title>
        <id>https://stratechery.com/?p=5856</id>
        <link href="https://stratechery.com/2021/market-making-on-the-internet/"/>
        <updated>2021-05-05T13:58:27.000Z</updated>
        <summary type="html"><![CDATA[More and more opportunities on the web come from market marking, not for advertisers, but for real goods and services paid for with real money.]]></summary>
        <author>
            <name>Ben Thompson</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[v1.3.1]]></title>
        <id>https://github.com/osmoscraft/osmosfeed/releases/tag/v1.3.1</id>
        <link href="https://github.com/osmoscraft/osmosfeed/releases/tag/v1.3.1"/>
        <updated>2021-05-05T05:19:57.000Z</updated>
        <summary type="html"><![CDATA[Fixed: Avoid crwalers.
Fixed: Error logging from XML parser.
Fixed: Typo in docs.
Thank you: @dym-sh, @tabokie, @cheese1]]></summary>
        <author>
            <name>Release notes from osmosfeed</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[v1.3.0]]></title>
        <id>https://github.com/osmoscraft/osmosfeed/releases/tag/v1.3.0</id>
        <link href="https://github.com/osmoscraft/osmosfeed/releases/tag/v1.3.0"/>
        <updated>2021-05-05T05:19:26.000Z</updated>
        <summary type="html"><![CDATA[Added: Customize cache lifespan with cacheMaxDays property in osmosfeed.yaml.
Added: Documentation for osmosfeed.yaml.
Fixed: More intuitive logging during build.
Chore: Refactored parameter passing for enrich step.]]></summary>
        <author>
            <name>Release notes from osmosfeed</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[v1.2.3]]></title>
        <id>https://github.com/osmoscraft/osmosfeed/releases/tag/v1.2.3</id>
        <link href="https://github.com/osmoscraft/osmosfeed/releases/tag/v1.2.3"/>
        <updated>2021-05-05T05:19:03.000Z</updated>
        <summary type="html"><![CDATA[Changed: favicon update.]]></summary>
        <author>
            <name>Release notes from osmosfeed</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[v1.2.1]]></title>
        <id>https://github.com/osmoscraft/osmosfeed/releases/tag/v1.2.1</id>
        <link href="https://github.com/osmoscraft/osmosfeed/releases/tag/v1.2.1"/>
        <updated>2021-05-05T05:18:52.000Z</updated>
        <summary type="html"><![CDATA[Added: Display CLI version in footer.]]></summary>
        <author>
            <name>Release notes from osmosfeed</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Recently - New York]]></title>
        <id>https://macwright.com/2021/05/02/recently.html</id>
        <link href="https://macwright.com/2021/05/02/recently.html"/>
        <updated>2021-05-02T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[I just moved to New York. Three years and nine months ago, I landed in San Francisco. When you leave San Francisco, you’re required to write a Medium post about it, so here’s mine.
San Francisco is a dream to run in. You have hills like Twin Peaks that tower over the city, rugged places like Glen Canyon where you can forget you’re in a city. Running around the Embarcadero in the heat, and running to the ocean via Golden Gate Park, where that last leg of JFK Drive gets chilly because of the sea breeze. Eleva…]]></summary>
        <author>
            <name>Tom MacWright</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Spotify’s Surprise]]></title>
        <id>https://stratechery.com/?p=5828</id>
        <link href="https://stratechery.com/2021/spotifys-surprise/"/>
        <updated>2021-04-28T13:19:27.000Z</updated>
        <summary type="html"><![CDATA[Spotify's new subscription podcast offerings embrace the open ecosystem of podcasts in multiple ways.]]></summary>
        <author>
            <name>Ben Thompson</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Podcast Subscriptions vs. the App Store]]></title>
        <id>https://stratechery.com/?p=5800</id>
        <link href="https://stratechery.com/2021/podcast-subscriptions-vs-the-app-store/"/>
        <updated>2021-04-21T14:44:43.000Z</updated>
        <summary type="html"><![CDATA[Apple's new Podcast Subscription service is what the App Store should be: a great Apple experience competing for customers.]]></summary>
        <author>
            <name>Ben Thompson</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Non-Fungible Taylor Swift]]></title>
        <id>https://stratechery.com/?p=5756</id>
        <link href="https://stratechery.com/2021/non-fungible-taylor-swift/"/>
        <updated>2021-04-12T14:01:55.000Z</updated>
        <summary type="html"><![CDATA[Taylor Swift, like Dave Chappelle, is leveraging the power of the Internet to take control of their art.]]></summary>
        <author>
            <name>Ben Thompson</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Sovereign Writers and Substack]]></title>
        <id>https://stratechery.com/?p=5684</id>
        <link href="https://stratechery.com/2021/sovereign-writers-and-substack/"/>
        <updated>2021-03-22T14:46:26.000Z</updated>
        <summary type="html"><![CDATA[Substack is at the center of media controversy, most of which misses the point that sovereign writers — not Substack — are in control.]]></summary>
        <author>
            <name>Ben Thompson</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Moderation in Infrastructure]]></title>
        <id>https://stratechery.com/?p=5671</id>
        <link href="https://stratechery.com/2021/moderation-in-infrastructure/"/>
        <updated>2021-03-16T13:34:52.000Z</updated>
        <summary type="html"><![CDATA[Infrastructure companies need a distinct approach to moderation that focuses on neutrality and due process.]]></summary>
        <author>
            <name>Ben Thompson</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[The return of fancy tools]]></title>
        <id>https://macwright.com/2021/03/16/return-of-fancy-tools.html</id>
        <link href="https://macwright.com/2021/03/16/return-of-fancy-tools.html"/>
        <updated>2021-03-16T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Technology is seeing a little return to complexity. Dreamweaver gave way to hand-coding websites, which is now leading into Webflow, which is a lot like Dreamweaver. Evernote give way to minimal Markdown notes, which are now becoming Notion, Coda, or Craft. Visual Studio was “disrupted” by Sublime Text and TextMate, which are now getting replaced by Visual Studio Code. JIRA was replaced by GitHub issues, which is getting outmoded by Linear.
The pendulum swings back and forth, which isn’t a bad thing. Some o…]]></summary>
        <author>
            <name>Tom MacWright</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Vendor by default]]></title>
        <id>https://macwright.com/2021/03/11/vendor-by-default.html</id>
        <link href="https://macwright.com/2021/03/11/vendor-by-default.html"/>
        <updated>2021-03-11T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[This isn’t a recommendation. It’s more of a habit that I’ve acquired recently. If this makes its way to Hacker News
and people think how could he, my only response will be 🤷, why not.
I’ve been building a thing, in JavaScript, an application sort of like things I’ve built in the past. With the same basic goal of making something useful. How I get to that goal is flexible. But it ends up being a lot of using boring technology, trying not to overthink the easy parts, trying to properly-think the hard parts, …]]></summary>
        <author>
            <name>Tom MacWright</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[The Roblox Microverse]]></title>
        <id>https://stratechery.com/?p=5658</id>
        <link href="https://stratechery.com/2021/the-roblox-microverse/"/>
        <updated>2021-03-09T16:08:37.000Z</updated>
        <summary type="html"><![CDATA[Roblox is something new and interesting that abstracts away the platforms underneath it.]]></summary>
        <author>
            <name>Ben Thompson</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Immutable approaches]]></title>
        <id>https://macwright.com/2021/03/05/immutable-approaches.html</id>
        <link href="https://macwright.com/2021/03/05/immutable-approaches.html"/>
        <updated>2021-03-05T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[These are some rough thoughts on how to do immutability in programming, to power undo. If you’re looking for an opinionated ‘this is how to do it’ sort of post, I’ve written that about Immutable.js. This is more a publicly-shared scratchpad.
For the fourth or so time in my career, I’m thinking about and implementing an ‘undo’ function. Undo is a powerful feature because it lets people do destructive or major operations without worrying because they can just hit command-z. Implementing undo is a subtle chall…]]></summary>
        <author>
            <name>Tom MacWright</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Recently]]></title>
        <id>https://macwright.com/2021/03/03/recently.html</id>
        <link href="https://macwright.com/2021/03/03/recently.html"/>
        <updated>2021-03-03T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[A little late on this one! I’ve been focusing a bit on projects and work, and those days flipped past.
Listening
I’ve been catching up on some back catalogs - Childish Gambino’s 3.15.20 and Beach House’s Depression Cherry.
Depression Cherry by Beach House

The little bit of new music is Claud’s spectacular “Super Monster” a hit-packed little indie pop album. (via Rebecca Williams)
Super Monster by Claud

Watching


I’m the last person in the world to watch Spinal Tap, but boy is it fun.
Adam Neely continues…]]></summary>
        <author>
            <name>Tom MacWright</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[The Web’s Missing Interoperability]]></title>
        <id>https://stratechery.com/?p=5649</id>
        <link href="https://stratechery.com/2021/the-webs-missing-interoperability/"/>
        <updated>2021-03-02T15:13:18.000Z</updated>
        <summary type="html"><![CDATA[Truly unlocking competition in tech means increasing interoperability; an absolutist approach to privacy is doing the exact opposite.]]></summary>
        <author>
            <name>Ben Thompson</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[One way to represent things]]></title>
        <id>https://macwright.com/2021/02/23/one-way-to-represent-things.html</id>
        <link href="https://macwright.com/2021/02/23/one-way-to-represent-things.html"/>
        <updated>2021-02-23T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[I have a theory about the future of programming. I doubt I’m the first to have it, but as far as I can tell this isn’t the mainstream thought in the area, and I want to see if this connects for other folks.
There’s this idea about having ‘one way to do things’, that I think is most famous in its phrasing from the Zen of Python
There should be one– and preferably only one –obvious way to do it.
Perl has the opposite motto: There’s more than one way to do it. Whether it’s better to have “one way to do things”…]]></summary>
        <author>
            <name>Tom MacWright</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[A year of Rails]]></title>
        <id>https://macwright.com/2021/02/18/a-year-of-rails.html</id>
        <link href="https://macwright.com/2021/02/18/a-year-of-rails.html"/>
        <updated>2021-02-18T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[I spent most of 2020 working with Ruby on Rails. I moved a project from Next.js + Rust to… Rails, baby! Back to the future. My earlier post on Second-guessing the modern web was inspired by this experience, that for the product we were building, a ‘modern’ stack was not working as well as a traditional one.
We didn’t do competitive analysis against Laravel, Django, or Phoenix. They’re similar, not radically better or worse. There are multiple acceptable solutions to a problem, and this was more a matter of …]]></summary>
        <author>
            <name>Tom MacWright</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Picking better names for variables, functions, and projects]]></title>
        <id>https://macwright.com/2021/02/17/the-naming-of-things.html</id>
        <link href="https://macwright.com/2021/02/17/the-naming-of-things.html"/>
        <updated>2021-02-17T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Naming things in programming is hard. It’s not impossible, though. Here are some guidelines I usually follow.
Avoid weasel words
Wikipedia’s article about weasel words is incredible. In this context I mean words like this:
Data
Process
Run
Do
Setup
These words usually don’t mean anything at all. Any variable could be called data. Any method could be called process. These words don’t inform or differentiate. Most methods and variables that include these names are misnamed. Think hard and figure out what’s be…]]></summary>
        <author>
            <name>Tom MacWright</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Recently]]></title>
        <id>https://macwright.com/2021/02/01/recently.html</id>
        <link href="https://macwright.com/2021/02/01/recently.html"/>
        <updated>2021-02-01T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[The last Recently feels like
a lot longer than a month away. In the undifferentiated temporal sprawl of the last
year, leaving my job in January marked a clear difference between between before
and after. Not, though, in the sense that I haven’t been working. My time
quickly filled up with a little freelance work, a lot of projects, and some pent-up
energy directed into reading and writing. I wrote
a few
things this month.
Frustrated with SwiftUI, I abandoned the first version of a Gemini browser
and am rew…]]></summary>
        <author>
            <name>Tom MacWright</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Tom Rates Hills: Tank Hill]]></title>
        <id>https://macwright.com/2021/01/22/tank-hill.html</id>
        <link href="https://macwright.com/2021/01/22/tank-hill.html"/>
        <updated>2021-01-22T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[I’ve never lived in the west side of San Francisco, where the Sunset District is forty-five avenues of flat suburban-style development, to the south of Golden Gate Park. So I’ve always approached San Francisco’s column of major hills - Twin Peaks, Corona Heights, Mount Davidson - from the north and the east. I think it’s this approach, from Twin Peaks Boulevard, that managed to hide Tank Hill in plain sight.


It’s just above a set of stairs off the side of the road, but I was always intent on climbing Twin…]]></summary>
        <author>
            <name>Tom MacWright</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Against essential and accidental complexity]]></title>
        <id>https://danluu.com/essential-complexity/</id>
        <link href="https://danluu.com/essential-complexity/"/>
        <updated>2020-12-29T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[In the classic 1986 essay, No Silver Bullet, Fred Brooks argued that there is, in some sense, not that much that can be done to improve programmer productivity. His line of reasoning is that programming tasks contain a core of essential/conceptual1 complexity that's fundamentally not amenable to attack by any potential advances in technology (such as languages or tooling). He then uses an Ahmdahl's law argument, saying that because 1/X of complexity is essential, it's impossible to ever get more than a fact…]]></summary>
        <author>
            <name>Dan Luu</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How do cars fare in crash tests they're not specifically optimized for?]]></title>
        <id>https://danluu.com/car-safety/</id>
        <link href="https://danluu.com/car-safety/"/>
        <updated>2020-06-30T07:06:34.000Z</updated>
        <summary type="html"><![CDATA[Any time you have a benchmark that gets taken seriously, some people will start gaming the benchmark. Some famous examples in computing are the CPU benchmark specfp and video game benchmarks. With specfp, Sun managed to increase its score on 179.art (a sub-benchmark of specfp) by 12x with a compiler tweak that essentially re-wrote the benchmark kernel, which increased the Sun UltraSPARC’s overall specfp score by 20%. At times, GPU vendors have added specialized benchmark-detecting code to their drivers that…]]></summary>
        <author>
            <name>Dan Luu</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Finding the Story]]></title>
        <id>https://danluu.com/voyager-story/</id>
        <link href="https://danluu.com/voyager-story/"/>
        <updated>2020-06-02T07:05:34.000Z</updated>
        <summary type="html"><![CDATA[This is an archive of an old pseudonymously written post from the 90s that seems to have disappeared from the internet.
I see that Star Trek: Voyager has added a new character, a Borg.
(From the photos, I also see that they're still breeding women for breast size
in the 24th century.) What ticked me off was the producer's comment (I'm
paraphrasing), "The addition of Seven of Nine will give us limitless
story possibilities."
Uh-huh. Riiiiiight.
Look, they did't recognize the stories they had.
I watched the f…]]></summary>
        <author>
            <name>Dan Luu</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[A simple way to get more value from tracing]]></title>
        <id>https://danluu.com/tracing-analytics/</id>
        <link href="https://danluu.com/tracing-analytics/"/>
        <updated>2020-05-31T07:06:34.000Z</updated>
        <summary type="html"><![CDATA[A lot of people seem to think that distributed tracing isn't useful, or at least not without extreme effort that isn't worth it for companies smaller than FB. For example, here are a couple of public conversations that sound like a number of private conversations I've had. Sure, there's value somewhere, but it costs too much to unlock.
I think this overestimates how much work it is to get a lot of value from tracing. At Twitter, Rebecca Isaacs was able to lay out a vision for how to get value from tracing a…]]></summary>
        <author>
            <name>Dan Luu</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[A simple way to get more value from metrics]]></title>
        <id>https://danluu.com/metrics-analytics/</id>
        <link href="https://danluu.com/metrics-analytics/"/>
        <updated>2020-05-30T07:06:34.000Z</updated>
        <summary type="html"><![CDATA[We spent one day1 building a system that immediately found a mid 7 figure optimization (which ended up shipping). In the first year, we shipped mid 8 figures per year worth of cost savings as a result. The key feature this system introduces is the ability to query metrics data across all hosts and all services and over any period of time (since inception), so we've called it LongTermMetrics (LTM) internally since I like boring, descriptive, names.
This got started when I was looking for a starter project th…]]></summary>
        <author>
            <name>Dan Luu</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How (some) good corporate engineering blogs are written]]></title>
        <id>https://danluu.com/corp-eng-blogs/</id>
        <link href="https://danluu.com/corp-eng-blogs/"/>
        <updated>2020-03-11T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[I've been comparing notes with people who run corporate engineering blogs and one thing that I think is curious is that it's pretty common for my personal blog to get more traffic than the entire corp eng blog for a company with a nine to ten figure valuation and it's not uncommon for my blog to get an order of magnitude more traffic.
I think this is odd because tech companies in that class often have hundreds to thousands of employees. They're overwhelmingly likely to be better equipped to write a compelli…]]></summary>
        <author>
            <name>Dan Luu</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[The growth of command line options, 1979-Present]]></title>
        <id>https://danluu.com/cli-complexity/</id>
        <link href="https://danluu.com/cli-complexity/"/>
        <updated>2020-03-03T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[My hobby: opening up McIlroy’s UNIX philosophy on one monitor while reading manpages on the other.
The first of McIlroy's dicta is often paraphrased as "do one thing and do it well", which is shortened from "Make each program do one thing well. To do a new job, build afresh rather than complicate old programs by adding new 'features.'"
McIlroy's example of this dictum is:
Surprising to outsiders is the fact that UNIX compilers produce no listings: printing can be done better and more flexibly by a separate …]]></summary>
        <author>
            <name>Dan Luu</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Suspicious discontinuities]]></title>
        <id>https://danluu.com/discontinuities/</id>
        <link href="https://danluu.com/discontinuities/"/>
        <updated>2020-02-18T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[If you read any personal finance forums late last year, there's a decent chance you ran across a question from someone who was desperately trying to lose money before the end of the year. There are a number of ways someone could do this; one commonly suggested scheme was to buy put options that were expected to expire worthless, allowing the buyer to (probably) take a loss.
One reason people were looking for ways to lose money was that, in the U.S., there's a hard income cutoff for a health insurance subsid…]]></summary>
        <author>
            <name>Dan Luu</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[95%-ile isn't that good]]></title>
        <id>https://danluu.com/p95-skill/</id>
        <link href="https://danluu.com/p95-skill/"/>
        <updated>2020-02-07T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Reaching 95%-ile isn't very impressive because it's not that hard to do. I think this is one of my most ridiculable ideas. It doesn't help that, when stated nakedly, that sounds elitist. But I think it's just the opposite: most people can become (relatively) good at most things.
Note that when I say 95%-ile, I mean 95%-ile among people who participate, not all people (for many activities, just doing it at all makes you 99%-ile or above across all people). I'm also not referring to 95%-ile among people who p…]]></summary>
        <author>
            <name>Dan Luu</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Algorithms interviews: theory vs. practice]]></title>
        <id>https://danluu.com/algorithms-interviews/</id>
        <link href="https://danluu.com/algorithms-interviews/"/>
        <updated>2020-01-05T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[When I ask people at trendy big tech companies why algorithms quizzes are mandatory, the most common answer I get is something like "we have so much scale, we can't afford to have someone accidentally write an O(n^2) algorithm and bring the site down"1.  One thing I find funny about this is, even though a decent fraction of the value I've provided for companies has been solving phone-screen level algorithms problems on the job, I can't pass algorithms interviews! When I say that, people often think I mean t…]]></summary>
        <author>
            <name>Dan Luu</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Files are fraught with peril]]></title>
        <id>https://danluu.com/deconstruct-files/</id>
        <link href="https://danluu.com/deconstruct-files/"/>
        <updated>2019-07-12T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[This is a psuedo-transcript for a talk given at Deconstruct 2019. To make this accessible for people on slow connections as well as people using screen readers, the slides have been replaced by in-line text (the talk has ~120 slides; at an average of 20 kB per slide, that's 2.4 MB. If you think that's trivial, consider that half of Americans still aren't on broadband and the situation is much worse in developing countries.
Let's talk about files! Most developers seem to think that files are easy. Just for e…]]></summary>
        <author>
            <name>Dan Luu</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Randomized trial on gender in Overwatch]]></title>
        <id>https://danluu.com/overwatch-gender/</id>
        <link href="https://danluu.com/overwatch-gender/"/>
        <updated>2019-02-19T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[A recurring discussion in Overwatch (as well as other online games) is whether or not women are treated differently from men. If you do a quick search, you can find hundreds of discussions about this, some of which have well over a thousand comments. These discussions tend to go the same way and involve the same debate every time, with the same points being made on both sides. Just for example, these three threads on reddit that spun out of a single post that have a total of 10.4k comments. On one side, you…]]></summary>
        <author>
            <name>Dan Luu</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Fsyncgate: errors on fsync are unrecovarable]]></title>
        <id>https://danluu.com/fsyncgate/</id>
        <link href="https://danluu.com/fsyncgate/"/>
        <updated>2018-03-28T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[This is an archive of the original "fsyncgate" email thread. This is posted here because I wanted to have a link that would fit on a slide for a talk on file safety with a mobile-friendly non-bloated format.
From:Craig Ringer <craig(at)2ndquadrant(dot)com>
Subject:Re: PostgreSQL's handling of fsync() errors is unsafe and risks data loss at least on XFS
Date:2018-03-28 02:23:46

Hi all
Some time ago I ran into an issue where a user encountered data corruption
after a storage error. PostgreSQL played a part i…]]></summary>
        <author>
            <name>Dan Luu</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Computer latency: 1977-2017]]></title>
        <id>https://danluu.com/input-lag/</id>
        <link href="https://danluu.com/input-lag/"/>
        <updated>2017-12-24T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[I've had this nagging feeling that the computers I use today feel slower than the computers I used as a kid. As a rule, I don’t trust this kind of feeling because human perception has been shown to be unreliable in empirical studies, so I carried around a high-speed camera and measured the response latency of devices I’ve run into in the past few months. Here are the results:
table {border-collapse:collapse;margin:0px auto;}table,th,td {border: 1px solid black;}td {text-align:center;}td.l {text-align:left;}…]]></summary>
        <author>
            <name>Dan Luu</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How good are decisions?]]></title>
        <id>https://danluu.com/bad-decisions/</id>
        <link href="https://danluu.com/bad-decisions/"/>
        <updated>2017-11-21T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[A statement I commonly hear in tech-utopian circles is that some seeming inefficiency can’t actually be inefficient because the market is efficient and inefficiencies will quickly be eliminated. A contentious example of this is the claim that companies can’t be discriminating because the market is too competitive to tolerate discrimination. A less contentious example is that when you see a big company doing something that seems bizarrely inefficient, maybe it’s not inefficient and you just lack the informat…]]></summary>
        <author>
            <name>Dan Luu</name>
        </author>
    </entry>
</feed>