{
  "sources": [
    {
      "title": "Release notes from osmosfeed",
      "feedUrl": "https://github.com/osmoscraft/osmosfeed/releases.atom",
      "siteUrl": "https://github.com/osmoscraft/osmosfeed/releases",
      "articles": [
        {
          "id": "https://github.com/osmoscraft/osmosfeed/releases/tag/v1.7.2",
          "author": null,
          "description": "‚ö† Deprecated: To accommodate the monorepo setup, the node version in all templates/demos/examples has changed from 14 to 16. This is not a breaking change as our compile target is still node 14, and node 16 is backward compatible. We still recommend you start using node-version: \"16\" in your .github/workflows/update-feed.yaml today to get the performance/security improvements from the newer node. See example\nChore: Reorganize to monorepo with npm workspace.",
          "link": "https://github.com/osmoscraft/osmosfeed/releases/tag/v1.7.2",
          "publishedOn": "2021-05-17T05:32:19.000Z",
          "wordCount": 340,
          "title": "v1.7.2"
        },
        {
          "id": "https://github.com/osmoscraft/osmosfeed/releases/tag/v1.7.1",
          "author": null,
          "description": "Fixed: static files were unnecessarily copied for custom templates.",
          "link": "https://github.com/osmoscraft/osmosfeed/releases/tag/v1.7.1",
          "publishedOn": "2021-05-16T02:33:58.000Z",
          "wordCount": 276,
          "title": "v1.7.1"
        },
        {
          "id": "https://github.com/osmoscraft/osmosfeed/releases/tag/v1.7.0",
          "author": null,
          "description": "Added: templating system. Demo | Source | Docs\nChore: rendering logic refactoring. Adopting functional paradigm.\nThank you @tianheg, @onnyyonn",
          "link": "https://github.com/osmoscraft/osmosfeed/releases/tag/v1.7.0",
          "publishedOn": "2021-05-16T01:42:24.000Z",
          "wordCount": 286,
          "title": "v1.7.0"
        },
        {
          "id": "https://github.com/osmoscraft/osmosfeed/releases/tag/v1.4.0",
          "author": null,
          "description": "Added: Basic theme customization: Demo | Source | Docs.",
          "link": "https://github.com/osmoscraft/osmosfeed/releases/tag/v1.4.0",
          "publishedOn": "2021-05-10T08:55:42.000Z",
          "wordCount": 276,
          "title": "v1.4.0"
        },
        {
          "id": "https://github.com/osmoscraft/osmosfeed/releases/tag/v1.6.0",
          "author": null,
          "description": "Added: Link from the title of a subscription to its website.\nAdded: Store feedUrl and siteUrl for each source in cache.\nAdded: Semantic element (<time>) for timestamp on the UI.\nAdded: Semantic API for theming the default template. Demo | Source | Docs\nChanged: Moved feed metadata from article level to feed level in cache.\nFixed: Any html-like text was stripped from title. Fixed with encoded text.\nRemoved: href for each source in cache. The value was never used so it's not a breaking change.",
          "link": "https://github.com/osmoscraft/osmosfeed/releases/tag/v1.6.0",
          "publishedOn": "2021-05-10T08:15:20.000Z",
          "wordCount": 352,
          "title": "v1.6.0"
        },
        {
          "id": "https://github.com/osmoscraft/osmosfeed/releases/tag/v1.5.0",
          "author": null,
          "description": "Added: Atom feed generator\nAdded: Customizable site title\nAdded: Copy all files from static directory to the root of the site.\nChanged: Favicon, css, and js assets now existing at site root level.\nChore: Excluded testing files from repo.",
          "link": "https://github.com/osmoscraft/osmosfeed/releases/tag/v1.5.0",
          "publishedOn": "2021-05-08T05:16:47.000Z",
          "wordCount": 306,
          "title": "v1.5.0"
        },
        {
          "id": "https://github.com/osmoscraft/osmosfeed/releases/tag/v1.3.1",
          "author": null,
          "description": "Fixed: Avoid crwalers.\nFixed: Error logging from XML parser.\nFixed: Typo in docs.\nThank you: @dym-sh, @tabokie, @cheese1",
          "link": "https://github.com/osmoscraft/osmosfeed/releases/tag/v1.3.1",
          "publishedOn": "2021-05-05T05:19:57.000Z",
          "wordCount": 285,
          "title": "v1.3.1"
        },
        {
          "id": "https://github.com/osmoscraft/osmosfeed/releases/tag/v1.3.0",
          "author": null,
          "description": "Added: Customize cache lifespan with cacheMaxDays property in osmosfeed.yaml.\nAdded: Documentation for osmosfeed.yaml.\nFixed: More intuitive logging during build.\nChore: Refactored parameter passing for enrich step.",
          "link": "https://github.com/osmoscraft/osmosfeed/releases/tag/v1.3.0",
          "publishedOn": "2021-05-05T05:19:26.000Z",
          "wordCount": 293,
          "title": "v1.3.0"
        },
        {
          "id": "https://github.com/osmoscraft/osmosfeed/releases/tag/v1.2.3",
          "author": null,
          "description": "Changed: favicon update.",
          "link": "https://github.com/osmoscraft/osmosfeed/releases/tag/v1.2.3",
          "publishedOn": "2021-05-05T05:19:03.000Z",
          "wordCount": 270,
          "title": "v1.2.3"
        },
        {
          "id": "https://github.com/osmoscraft/osmosfeed/releases/tag/v1.2.1",
          "author": null,
          "description": "Added: Display CLI version in footer.",
          "link": "https://github.com/osmoscraft/osmosfeed/releases/tag/v1.2.1",
          "publishedOn": "2021-05-05T05:18:52.000Z",
          "wordCount": 273,
          "title": "v1.2.1"
        }
      ]
    },
    {
      "title": "Dan Luu",
      "feedUrl": "https://danluu.com/atom.xml",
      "siteUrl": "https://danluu.com/atom/index.xml",
      "articles": [
        {
          "id": "https://danluu.com/essential-complexity/",
          "author": null,
          "description": "In the classic 1986 essay, No Silver Bullet, Fred Brooks argued that there is, in some sense, not that much that can be done to improve programmer productivity. His line of reasoning is that programming tasks contain a core of essential/conceptual1 complexity that's fundamentally not amenable to attack by any potential advances in technology (such as languages or tooling). He then uses an Ahmdahl's law argument, saying that because 1/X of complexity is essential, it's impossible to ever get more than a fact‚Ä¶",
          "link": "https://danluu.com/essential-complexity/",
          "publishedOn": "2020-12-29T00:00:00.000Z",
          "wordCount": 5620,
          "title": "Against essential and accidental complexity"
        }
      ]
    },
    {
      "title": "Tom MacWright",
      "feedUrl": "https://macwright.com/atom.xml",
      "siteUrl": "https://macwright.com/atom.xml",
      "articles": [
        {
          "id": "https://macwright.com/2021/05/02/recently.html",
          "author": null,
          "description": "I just moved to New York. Three years and nine months ago, I landed in San Francisco. When you leave San Francisco, you‚Äôre required to write a Medium post about it, so here‚Äôs mine.\nSan Francisco is a dream to run in. You have hills like Twin Peaks that tower over the city, rugged places like Glen Canyon where you can forget you‚Äôre in a city. Running around the Embarcadero in the heat, and running to the ocean via Golden Gate Park, where that last leg of JFK Drive gets chilly because of the sea breeze. Eleva‚Ä¶",
          "link": "https://macwright.com/2021/05/02/recently.html",
          "publishedOn": "2021-05-02T00:00:00.000Z",
          "wordCount": 651,
          "title": "Recently - New York"
        },
        {
          "id": "https://macwright.com/2021/03/16/return-of-fancy-tools.html",
          "author": null,
          "description": "Technology is seeing a little return to complexity. Dreamweaver gave way to hand-coding websites, which is now leading into Webflow, which is a lot like Dreamweaver. Evernote give way to minimal Markdown notes, which are now becoming Notion, Coda, or Craft. Visual Studio was ‚Äúdisrupted‚Äù by Sublime Text and TextMate, which are now getting replaced by Visual Studio Code. JIRA was replaced by GitHub issues, which is getting outmoded by Linear.\nThe pendulum swings back and forth, which isn‚Äôt a bad thing. Some o‚Ä¶",
          "link": "https://macwright.com/2021/03/16/return-of-fancy-tools.html",
          "publishedOn": "2021-03-16T00:00:00.000Z",
          "wordCount": 537,
          "title": "The return of fancy tools"
        },
        {
          "id": "https://macwright.com/2021/03/11/vendor-by-default.html",
          "author": null,
          "description": "This isn‚Äôt a recommendation. It‚Äôs more of a habit that I‚Äôve acquired recently. If this makes its way to Hacker News\nand people think how could he, my only response will be ü§∑, why not.\nI‚Äôve been building a thing, in JavaScript, an application sort of like things I‚Äôve built in the past. With the same basic goal of making something useful. How I get to that goal is flexible. But it ends up being a lot of using boring technology, trying not to overthink the easy parts, trying to properly-think the hard parts, ‚Ä¶",
          "link": "https://macwright.com/2021/03/11/vendor-by-default.html",
          "publishedOn": "2021-03-11T00:00:00.000Z",
          "wordCount": 1003,
          "title": "Vendor by default"
        },
        {
          "id": "https://macwright.com/2021/03/05/immutable-approaches.html",
          "author": null,
          "description": "These are some rough thoughts on how to do immutability in programming, to power undo. If you‚Äôre looking for an opinionated ‚Äòthis is how to do it‚Äô sort of post, I‚Äôve written that about Immutable.js. This is more a publicly-shared scratchpad.\nFor the fourth or so time in my career, I‚Äôm thinking about and implementing an ‚Äòundo‚Äô function. Undo is a powerful feature because it lets people do destructive or major operations without worrying because they can just hit command-z. Implementing undo is a subtle chall‚Ä¶",
          "link": "https://macwright.com/2021/03/05/immutable-approaches.html",
          "publishedOn": "2021-03-05T00:00:00.000Z",
          "wordCount": 921,
          "title": "Immutable approaches"
        },
        {
          "id": "https://macwright.com/2021/03/03/recently.html",
          "author": null,
          "description": "A little late on this one! I‚Äôve been focusing a bit on projects and work, and those days flipped past.\nListening\nI‚Äôve been catching up on some back catalogs - Childish Gambino‚Äôs 3.15.20 and Beach House‚Äôs Depression Cherry.\nDepression Cherry by Beach House\n\nThe little bit of new music is Claud‚Äôs spectacular ‚ÄúSuper Monster‚Äù a hit-packed little indie pop album. (via Rebecca Williams)\nSuper Monster by Claud\n\nWatching\n\n\nI‚Äôm the last person in the world to watch Spinal Tap, but boy is it fun.\nAdam Neely continues‚Ä¶",
          "link": "https://macwright.com/2021/03/03/recently.html",
          "publishedOn": "2021-03-03T00:00:00.000Z",
          "wordCount": 243,
          "title": "Recently"
        },
        {
          "id": "https://macwright.com/2021/02/23/one-way-to-represent-things.html",
          "author": null,
          "description": "I have a theory about the future of programming. I doubt I‚Äôm the first to have it, but as far as I can tell this isn‚Äôt the mainstream thought in the area, and I want to see if this connects for other folks.\nThere‚Äôs this idea about having ‚Äòone way to do things‚Äô, that I think is most famous in its phrasing from the Zen of Python\nThere should be one‚Äì and preferably only one ‚Äìobvious way to do it.\nPerl has the opposite motto: There‚Äôs more than one way to do it. Whether it‚Äôs better to have ‚Äúone way to do things‚Äù‚Ä¶",
          "link": "https://macwright.com/2021/02/23/one-way-to-represent-things.html",
          "publishedOn": "2021-02-23T00:00:00.000Z",
          "wordCount": 614,
          "title": "One way to represent things"
        },
        {
          "id": "https://macwright.com/2021/02/18/a-year-of-rails.html",
          "author": null,
          "description": "I spent most of 2020 working with Ruby on Rails. I moved a project from Next.js + Rust to‚Ä¶¬†Rails, baby! Back to the future. My earlier post on Second-guessing the modern web was inspired by this experience, that for the product we were building, a ‚Äòmodern‚Äô stack was not working as well as a traditional one.\nWe didn‚Äôt do competitive analysis against Laravel, Django, or Phoenix. They‚Äôre similar, not radically better or worse. There are multiple acceptable solutions to a problem, and this was more a matter of ‚Ä¶",
          "link": "https://macwright.com/2021/02/18/a-year-of-rails.html",
          "publishedOn": "2021-02-18T00:00:00.000Z",
          "wordCount": 2188,
          "title": "A year of Rails"
        },
        {
          "id": "https://macwright.com/2021/02/17/the-naming-of-things.html",
          "author": null,
          "description": "Naming things in programming is hard. It‚Äôs not impossible, though. Here are some guidelines I usually follow.\nAvoid weasel words\nWikipedia‚Äôs article about weasel words is incredible. In this context I mean words like this:\nData\nProcess\nRun\nDo\nSetup\nThese words usually don‚Äôt mean anything at all. Any variable could be called data. Any method could be called process. These words don‚Äôt inform or differentiate. Most methods and variables that include these names are misnamed. Think hard and figure out what‚Äôs be‚Ä¶",
          "link": "https://macwright.com/2021/02/17/the-naming-of-things.html",
          "publishedOn": "2021-02-17T00:00:00.000Z",
          "wordCount": 596,
          "title": "Picking better names for variables, functions, and projects"
        },
        {
          "id": "https://macwright.com/2021/02/01/recently.html",
          "author": null,
          "description": "The last Recently feels like\na lot longer than a month away. In the undifferentiated temporal sprawl of the last\nyear, leaving my job in January marked a clear difference between between before\nand after. Not, though, in the sense that I haven‚Äôt been working. My time\nquickly filled up with a little freelance work, a lot of projects, and some pent-up\nenergy directed into reading and writing. I wrote\na few\nthings this month.\nFrustrated with SwiftUI, I abandoned the first version of a Gemini browser\nand am rew‚Ä¶",
          "link": "https://macwright.com/2021/02/01/recently.html",
          "publishedOn": "2021-02-01T00:00:00.000Z",
          "wordCount": 641,
          "title": "Recently"
        },
        {
          "id": "https://macwright.com/2021/01/22/tank-hill.html",
          "author": null,
          "description": "I‚Äôve never lived in the west side of San Francisco, where the Sunset District is forty-five avenues of flat suburban-style development, to the south of Golden Gate Park. So I‚Äôve always approached San Francisco‚Äôs column of major hills - Twin Peaks, Corona Heights, Mount Davidson - from the north and the east. I think it‚Äôs this approach, from Twin Peaks Boulevard, that managed to hide Tank Hill in plain sight.\n\n\nIt‚Äôs just above a set of stairs off the side of the road, but I was always intent on climbing Twin‚Ä¶",
          "link": "https://macwright.com/2021/01/22/tank-hill.html",
          "publishedOn": "2021-01-22T00:00:00.000Z",
          "wordCount": 768,
          "title": "Tom Rates Hills: Tank Hill"
        }
      ]
    }
  ],
  "cliVersion": "1.7.2"
}